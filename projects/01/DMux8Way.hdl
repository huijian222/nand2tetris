// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
* 8-way demultiplexor:        a.  b. c. d. e  f. g. h 
* {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
*                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
*                            {0, 0, in, 0, 0, 0, 0, 0} if sel == 010
*                            {0, 0, 0, in, 0, 0, 0, 0} if sel == 011
*                            {0, 0, 0, 0, in, 0, 0, 0} if sel == 100
*                            {0, 0, 0, 0, 0, in, 0, 0} if sel == 101
*                            {0, 0, 0, 0, 0, 0, in, 0} if sel == 110
*                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
*/

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
        DMux(in=in, sel=sel[2], a=left4, b=right4);
        DMux(in=left4, sel=sel[1], a=leftleft2, b=leftright2);
        DMux(in=leftleft2, sel=sel[0], a=a, b=b);
        DMux(in=leftright2, sel=sel[0], a=c, b=d);
        DMux(in=right4, sel=sel[1], a=rightleft2, b=rightright2);
        DMux(in=rightleft2, sel=sel[0], a=e, b=f);
        DMux(in=rightright2, sel=sel[0], a=g, b=h);   
}